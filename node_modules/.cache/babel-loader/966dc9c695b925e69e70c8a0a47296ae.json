{"ast":null,"code":"var _jsxFileName = \"/Users/daria/development/paper-rock-scissors/src/components/new.js\";\nimport React from 'react';\nimport Options from './Options/Options';\nimport Header from './Header/Header';\nimport Message from './Message/Message';\n\nclass New extends React.Component {\n  constructor() {\n    super();\n\n    this.playerMoved = choice => {\n      this.setState({\n        PlayerChoice: choice,\n        startGame: true,\n        test: true\n      });\n      this.generateComputerChoice();\n    };\n\n    this.broadcastTest = broadcast => {\n      this.setState({\n        message: broadcast\n      });\n    };\n\n    this.state = {\n      username: 'Daria',\n      PlayerChoice: \"smth\",\n      computerChoice: \"other\",\n      firstPlayerScore: 0,\n      computerScore: 0,\n      startGame: false,\n      endGame: false,\n      tieGame: false,\n      test: true,\n      generateComputerChoiceBool: false,\n      message: \"Welcome to the game!\"\n    };\n  }\n\n  generateComputerChoice() {\n    var random = Math.floor(Math.random() * 3);\n    let choices = [\"rock\", \"paper\", \"scissors\"];\n    var computerChoice = choices[random];\n    this.setState({\n      computerChoice: computerChoice\n    });\n    console.log(\"computer choice is \".concat(computerChoice));\n  }\n\n  findWinner() {\n    let resultArray = [];\n    resultArray.push(this.state.PlayerChoice);\n    resultArray.push(this.state.computerChoice);\n    let broadcast = \"\";\n\n    if (resultArray[0] === resultArray[1]) {\n      console.log(\"tie \");\n      broadcast = \"tie\";\n    }\n\n    switch (resultArray[0], resultArray[1]) {\n      case ('rock', 'paper'):\n        console.log(resultArray);\n        console.log(\"Paper wins rock!\");\n        broadcast = \"tie\";\n        break;\n\n      case ('rock', 'scissors'):\n        console.log(resultArray);\n        console.log(\"Scissors wins paper!\");\n        broadcast = \"tie\";\n        break;\n\n      case ('paper', 'rock'):\n        console.log(resultArray);\n        console.log(\"Paper wins rock!\");\n        broadcast = \"tie\";\n        break;\n\n      case ('paper', \"scissors\"):\n        console.log(resultArray);\n        console.log(\"Rock wins scissors!\");\n        broadcast = \"tie\";\n        break;\n\n      case ('scissors', \"rock\"):\n        console.log(resultArray);\n        console.log(\"Rock wins scissors!\");\n        broadcast = \"tie\";\n        break;\n\n      case ('scissors', \"paper\"):\n        console.log(resultArray);\n        console.log(\"Rock wins scissors!\");\n        broadcast = \"tie\";\n        break;\n\n      default: // code block\n\n    }\n\n    this.broadcastTest(broadcast);\n  }\n\n  render() {\n    let message = null;\n\n    if (this.state.message) {\n      message = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Message, {\n        message: this.state.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \" \"));\n    }\n\n    if (this.state.startGame) {\n      this.findWinner();\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \" \"), message, React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Options, {\n      click: () => this.playerMoved(\"paper\"),\n      choice: \"Paper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(Options, {\n      click: () => this.playerMoved(\"rock\"),\n      choice: \"Rock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Options, {\n      click: () => this.playerMoved(\"scissors\"),\n      choice: \"Scissors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default New;","map":{"version":3,"sources":["/Users/daria/development/paper-rock-scissors/src/components/new.js"],"names":["React","Options","Header","Message","New","Component","constructor","playerMoved","choice","setState","PlayerChoice","startGame","test","generateComputerChoice","broadcastTest","broadcast","message","state","username","computerChoice","firstPlayerScore","computerScore","endGame","tieGame","generateComputerChoiceBool","random","Math","floor","choices","console","log","findWinner","resultArray","push","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACV;;AADU,SAkBdC,WAlBc,GAkBCC,MAAD,IAAY;AACtB,WAAKC,QAAL,CAAe;AACPC,QAAAA,YAAY,EAAEF,MADP;AAEPG,QAAAA,SAAS,EAAC,IAFH;AAGPC,QAAAA,IAAI,EAAC;AAHE,OAAf;AAKA,WAAKC,sBAAL;AAEH,KA1Ba;;AAAA,SAsFdC,aAtFc,GAsFCC,SAAD,IAAc;AACxB,WAAKN,QAAL,CAAc;AACVO,QAAAA,OAAO,EAAED;AADC,OAAd;AAGH,KA1Fa;;AAEV,SAAKE,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,OADD;AAETR,MAAAA,YAAY,EAAC,MAFJ;AAGTS,MAAAA,cAAc,EAAE,OAHP;AAITC,MAAAA,gBAAgB,EAAE,CAJT;AAKTC,MAAAA,aAAa,EAAE,CALN;AAMTV,MAAAA,SAAS,EAAC,KAND;AAOTW,MAAAA,OAAO,EAAC,KAPC;AAQTC,MAAAA,OAAO,EAAC,KARC;AASTX,MAAAA,IAAI,EAAC,IATI;AAUTY,MAAAA,0BAA0B,EAAC,KAVlB;AAWTR,MAAAA,OAAO,EAAC;AAXC,KAAb;AAcH;;AAYDH,EAAAA,sBAAsB,GAAG;AACrB,QAAIY,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAc,CAAzB,CAAb;AACA,QAAIG,OAAO,GAAG,CAAC,MAAD,EAAQ,OAAR,EAAgB,UAAhB,CAAd;AACA,QAAIT,cAAc,GAAGS,OAAO,CAACH,MAAD,CAA5B;AACA,SAAKhB,QAAL,CAAc;AACVU,MAAAA,cAAc,EAAEA;AADN,KAAd;AAGAU,IAAAA,OAAO,CAACC,GAAR,8BAAkCX,cAAlC;AAEH;;AAEDY,EAAAA,UAAU,GAAG;AACT,QAAIC,WAAW,GAAG,EAAlB;AACAA,IAAAA,WAAW,CAACC,IAAZ,CAAiB,KAAKhB,KAAL,CAAWP,YAA5B;AACAsB,IAAAA,WAAW,CAACC,IAAZ,CAAiB,KAAKhB,KAAL,CAAWE,cAA5B;AACA,QAAIJ,SAAS,GAAG,EAAhB;;AAEA,QAAGiB,WAAW,CAAC,CAAD,CAAX,KAAmBA,WAAW,CAAC,CAAD,CAAjC,EAAsC;AAClCH,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAf,MAAAA,SAAS,GAAG,KAAZ;AACH;;AACD,YAAOiB,WAAW,CAAC,CAAD,CAAX,EAAeA,WAAW,CAAC,CAAD,CAAjC;AACE,YAAK,QAAO,OAAZ;AACEH,QAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAf,QAAAA,SAAS,GAAG,KAAZ;AACA;;AACF,YAAK,QAAO,UAAZ;AACEc,QAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAf,QAAAA,SAAS,GAAG,KAAZ;AACA;;AACF,YAAK,SAAQ,MAAb;AACEc,QAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAf,QAAAA,SAAS,GAAG,KAAZ;AACA;;AACF,YAAK,SAAS,UAAd;AACEc,QAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAf,QAAAA,SAAS,GAAG,KAAZ;AACA;;AACF,YAAK,YAAY,MAAjB;AACEc,QAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAf,QAAAA,SAAS,GAAG,KAAZ;AACA;;AACF,YAAK,YAAY,OAAjB;AACEc,QAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAf,QAAAA,SAAS,GAAG,KAAZ;AACA;;AACF,cA/BF,CAgCM;;AAhCN;;AAkCA,SAAKD,aAAL,CAAmBC,SAAnB;AACH;;AAQDmB,EAAAA,MAAM,GAAG;AACL,QAAIlB,OAAO,GAAG,IAAd;;AAEA,QAAG,KAAKC,KAAL,CAAWD,OAAd,EAAuB;AACnBA,MAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADH,CADF;AAKD;;AAEH,QAAG,KAAKC,KAAL,CAAWN,SAAd,EAAyB;AACrB,WAAKoB,UAAL;AACH;;AAGD,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEKf,OAFL,EAGI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,MAAM,KAAKT,WAAL,CAAiB,OAAjB,CAAtB;AAAiD,MAAA,MAAM,EAAC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,MAAK,KAAKA,WAAL,CAAiB,MAAjB,CAArB;AAA+C,MAAA,MAAM,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,MAAK,KAAKA,WAAL,CAAiB,UAAjB,CAArB;AAAmD,MAAA,MAAM,EAAC,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CAHJ,CAFJ;AAYH;;AAzH6B;;AA4HlC,eAAeH,GAAf","sourcesContent":["import React from 'react'; \nimport Options from './Options/Options'\nimport Header from './Header/Header'; \nimport Message from './Message/Message'; \n\nclass New extends React.Component {\n    constructor() {\n        super() \n        this.state = {\n            username: 'Daria',\n            PlayerChoice:\"smth\",\n            computerChoice: \"other\",\n            firstPlayerScore: 0,\n            computerScore: 0,\n            startGame:false,\n            endGame:false,\n            tieGame:false,\n            test:true,\n            generateComputerChoiceBool:false,\n            message:\"Welcome to the game!\"\n          }\n \n    }\n\n    playerMoved = (choice) => {\n        this.setState( {\n                PlayerChoice: choice,\n                startGame:true,\n                test:true,\n            })\n        this.generateComputerChoice()\n\n    }\n\n    generateComputerChoice() {\n        var random = Math.floor(Math.random()*3); \n        let choices = [\"rock\",\"paper\",\"scissors\"]; \n        var computerChoice = choices[random]; \n        this.setState({\n            computerChoice: computerChoice\n        })\n        console.log(`computer choice is ${computerChoice}`)\n      \n    }\n  \n    findWinner() {\n        let resultArray = []; \n        resultArray.push(this.state.PlayerChoice) \n        resultArray.push(this.state.computerChoice) \n        let broadcast = \"\"; \n\n        if(resultArray[0] === resultArray[1]) {\n            console.log(\"tie \")\n            broadcast = \"tie\"\n        }\n        switch(resultArray[0],resultArray[1]) {\n          case 'rock','paper':\n            console.log(resultArray)\n            console.log(\"Paper wins rock!\")\n            broadcast = \"tie\"\n            break;\n          case 'rock','scissors':\n            console.log(resultArray)\n            console.log(\"Scissors wins paper!\")\n            broadcast = \"tie\"\n            break;\n          case 'paper','rock':\n            console.log(resultArray)\n            console.log(\"Paper wins rock!\") \n            broadcast = \"tie\"\n            break;\n          case 'paper', \"scissors\":\n            console.log(resultArray)\n            console.log(\"Rock wins scissors!\")\n            broadcast = \"tie\"\n            break;\n          case 'scissors', \"rock\":\n            console.log(resultArray)\n            console.log(\"Rock wins scissors!\")\n            broadcast = \"tie\"\n            break;\n          case 'scissors', \"paper\":\n            console.log(resultArray)\n            console.log(\"Rock wins scissors!\")\n            broadcast = \"tie\"\n            break;\n          default:\n              // code block\n          }\n        this.broadcastTest(broadcast)\n    }\n\n    broadcastTest=(broadcast)=> {\n        this.setState({\n            message: broadcast\n        })\n    }\n\n    render() {\n        let message = null; \n\n        if(this.state.message) {\n            message = (\n              <div>\n                 <Message message={this.state.message}> </Message> \n              </div>\n            )\n          }\n\n        if(this.state.startGame) {\n            this.findWinner()\n        }\n    \n\n        return (\n            \n            <div>\n                <Header> </Header>\n                {message}\n                <div className=\"flex-container\">\n                <Options click={() => this.playerMoved(\"paper\")} choice=\"Paper\" />\n                <Options click={() =>this.playerMoved(\"rock\")} choice=\"Rock\" />\n                <Options click={() =>this.playerMoved(\"scissors\")} choice=\"Scissors\" /> \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default New; "]},"metadata":{},"sourceType":"module"}