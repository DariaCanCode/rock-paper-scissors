{"ast":null,"code":"var _jsxFileName = \"/Users/daria/development/rock-paper-scissors/src/components/new.js\";\nimport React from 'react';\nimport Options from './Options/Options';\nimport Header from './Header/Header';\nimport Message from './Message/Message';\nimport PlayerScore from './PlayerScore/PlayerScore';\nimport ComputerScore from './ComputerScore/ComputerScore';\n\nclass New extends React.Component {\n  constructor() {\n    super();\n\n    this.playerMoved = choice => {\n      this.setState({\n        PlayerChoice: choice,\n        startGame: true,\n        test: true\n      });\n      this.generateComputerChoice();\n      this.findWinner(); // this.broadcastTest(\"broadcasw\")\n    };\n\n    this.state = {\n      username: 'Daria',\n      PlayerChoice: \"smth\",\n      computerChoice: \"other\",\n      playerScore: 0,\n      computerScore: 0,\n      startGame: false,\n      endGame: false,\n      tieGame: false,\n      test: true,\n      generateComputerChoiceBool: false,\n      message: \"Welcome to the game!\",\n      PlayerScoreBool: true\n    };\n  }\n\n  generateComputerChoice() {\n    var random = Math.floor(Math.random() * 3);\n    let choices = [\"rock\", \"paper\", \"scissors\"];\n    var computerChoice = choices[random];\n    this.setState({\n      computerChoice: computerChoice\n    });\n    console.log(\"computer choice is \".concat(computerChoice));\n  }\n\n  findWinner() {\n    let resultArray = [];\n    resultArray.push(this.state.PlayerChoice);\n    resultArray.push(this.state.computerChoice);\n\n    if (resultArray[0] === resultArray[1]) {\n      console.log(\"tie \");\n      this.setState({\n        playerScore: this.state.playerScore + 1,\n        message: \"tie\"\n      });\n    }\n\n    switch (resultArray[0], resultArray[1]) {\n      case ('rock', 'paper'):\n        console.log(resultArray);\n        console.log(\"Paper wins rock!\");\n        this.setState({\n          playerScore: this.state.playerScore + 1,\n          message: \"Paper wins rock!\"\n        });\n        break;\n\n      case ('rock', 'scissors'):\n        console.log(resultArray);\n        console.log(\"Scissors wins paper!\");\n        this.setState({\n          playerScore: this.state.playerScore + 1,\n          message: \"Scissors wins paper!\"\n        });\n        break;\n\n      case ('paper', 'rock'):\n        console.log(resultArray);\n        console.log(\"Paper wins rock!\");\n        this.setState({\n          playerScore: this.state.playerScore + 1,\n          message: \"Paper wins rock!\"\n        });\n        break;\n\n      case ('paper', \"scissors\"):\n        console.log(resultArray);\n        console.log(\"Rock wins scissors!\");\n        this.setState({\n          playerScore: this.state.playerScore + 1,\n          message: \"Rock wins scissors!\"\n        });\n        break;\n\n      case ('scissors', \"rock\"):\n        console.log(resultArray);\n        console.log(\"Rock wins scissors!\");\n        this.setState({\n          playerScore: this.state.playerScore + 1,\n          message: \"Rock wins scissors!\"\n        });\n        break;\n\n      case ('scissors', \"paper\"):\n        console.log(resultArray);\n        console.log(\"Rock wins scissors!\");\n        this.setState({\n          playerScore: this.state.playerScore + 1,\n          message: \"Rock wins scissors!\"\n        });\n        break;\n\n      default: // code block\n\n    }\n  }\n\n  render() {\n    let message = null;\n    let playerScore = null;\n    let computerScore = null;\n\n    if (this.state.com) {\n      computerScore = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(ComputerScore, {\n        choice: this.state.computerScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \" \"));\n    }\n\n    if (this.state.PlayerScoreBool) {\n      playerScore = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(PlayerScore, {\n        choice: this.state.playerScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \" \"));\n    }\n\n    if (this.state.message) {\n      message = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Message, {\n        message: this.state.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \" \"));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \" \"), playerScore, message, React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Options, {\n      click: () => this.playerMoved(\"paper\"),\n      choice: \"Paper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(Options, {\n      click: () => this.playerMoved(\"rock\"),\n      choice: \"Rock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(Options, {\n      click: () => this.playerMoved(\"scissors\"),\n      choice: \"Scissors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default New;","map":{"version":3,"sources":["/Users/daria/development/rock-paper-scissors/src/components/new.js"],"names":["React","Options","Header","Message","PlayerScore","ComputerScore","New","Component","constructor","playerMoved","choice","setState","PlayerChoice","startGame","test","generateComputerChoice","findWinner","state","username","computerChoice","playerScore","computerScore","endGame","tieGame","generateComputerChoiceBool","message","PlayerScoreBool","random","Math","floor","choices","console","log","resultArray","push","render","com"],"mappings":"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","sourcesContent":["import React from 'react'; \nimport Options from './Options/Options'\nimport Header from './Header/Header'; \nimport Message from './Message/Message'; \nimport PlayerScore from './PlayerScore/PlayerScore'; \nimport ComputerScore from './ComputerScore/ComputerScore'; \n\n\nclass New extends React.Component {\n    constructor() {\n        super() \n        this.state = {\n            username: 'Daria',\n            PlayerChoice:\"smth\",\n            computerChoice: \"other\",\n            playerScore: 0,\n            computerScore: 0,\n            startGame:false,\n            endGame:false,\n            tieGame:false,\n            test:true,\n            generateComputerChoiceBool:false,\n            message:\"Welcome to the game!\",\n            PlayerScoreBool:true \n          }\n \n    }\n\n    playerMoved = (choice) => {\n        this.setState({\n                PlayerChoice: choice,\n                startGame:true,\n                test:true,\n            })\n        this.generateComputerChoice()\n        this.findWinner()\n        // this.broadcastTest(\"broadcasw\")\n    }\n\n    generateComputerChoice() {\n        var random = Math.floor(Math.random()*3); \n        let choices = [\"rock\",\"paper\",\"scissors\"]; \n        var computerChoice = choices[random]; \n        this.setState({\n            computerChoice: computerChoice\n        })\n        console.log(`computer choice is ${computerChoice}`)\n    }\n  \n    findWinner() {\n        let resultArray = []; \n        resultArray.push(this.state.PlayerChoice) \n        resultArray.push(this.state.computerChoice) \n\n        if(resultArray[0] === resultArray[1]) {\n            console.log(\"tie \")\n            this.setState({\n                playerScore: this.state.playerScore +1,\n                message:\"tie\"\n              });\n        }\n        switch(resultArray[0],resultArray[1]) {\n          case 'rock','paper':\n            console.log(resultArray)\n            console.log(\"Paper wins rock!\")\n            this.setState({\n                playerScore: this.state.playerScore +1,\n                message:\"Paper wins rock!\"\n              });\n         \n            break;\n          case 'rock','scissors':\n            console.log(resultArray)\n            console.log(\"Scissors wins paper!\")\n            this.setState({\n                playerScore: this.state.playerScore +1,\n                message:\"Scissors wins paper!\"\n              });\n            break;\n          case 'paper','rock':\n            console.log(resultArray)\n            console.log(\"Paper wins rock!\") \n            this.setState({\n                playerScore: this.state.playerScore +1,\n                message:\"Paper wins rock!\"\n              });\n            break;\n          case 'paper', \"scissors\":\n            console.log(resultArray)\n            console.log(\"Rock wins scissors!\")\n            this.setState({\n                playerScore: this.state.playerScore +1,\n                message:\"Rock wins scissors!\"\n              });\n            break;\n          case 'scissors', \"rock\":\n            console.log(resultArray)\n            console.log(\"Rock wins scissors!\")\n            this.setState({\n                playerScore: this.state.playerScore +1,\n                message:\"Rock wins scissors!\"\n              });\n            break;\n          case 'scissors', \"paper\":\n            console.log(resultArray)\n            console.log(\"Rock wins scissors!\")\n            this.setState({\n                playerScore: this.state.playerScore +1,\n                message:\"Rock wins scissors!\"\n              });\n            break;\n          default:\n              // code block\n    }\n}\n    render() {\n        let message = null; \n        let playerScore = null; \n        let computerScore = null; \n\n        if(this.state.com) {\n          computerScore = (\n            <div>\n              <ComputerScore choice={this.state.computerScore}> </ComputerScore>\n            </div>\n          )\n        }\n\n        if(this.state.PlayerScoreBool) {\n          playerScore = (\n            <div>\n              <PlayerScore choice={this.state.playerScore}> </PlayerScore>\n            </div>\n          )\n        }\n        if(this.state.message) {\n            message = (\n              <div>\n                 <Message message={this.state.message}> </Message> \n              </div>\n            )\n          }\n    \n    \n        return (\n            <div>\n                <Header> </Header>\n                {playerScore}\n                {message}\n                <div className=\"flex-container\">\n                <Options click={() => this.playerMoved(\"paper\")} choice=\"Paper\" />\n                <Options click={() =>this.playerMoved(\"rock\")} choice=\"Rock\" />\n                <Options click={() =>this.playerMoved(\"scissors\")} choice=\"Scissors\" /> \n                </div>\n            </div>\n        )}\n}\n\nexport default New; "]},"metadata":{},"sourceType":"module"}