{"ast":null,"code":"var _jsxFileName = \"/Users/daria/development/paper-rock-scissors/src/components/new.js\";\nimport React from 'react';\nimport Options from './Options/Options';\n\nclass New extends React.Component {\n  constructor() {\n    super();\n\n    this.playerMoved = () => {\n      this.setState({\n        PlayerChoice: \"rock\",\n        computerChoice: \"rock\",\n        startGame: true,\n        test: true\n      });\n    };\n\n    this.state = {\n      username: 'Daria',\n      PlayerChoice: \"smth\",\n      computerChoice: \"other\",\n      firstPlayerScore: 0,\n      computerScore: 0,\n      startGame: false,\n      endGame: false,\n      tieGame: false,\n      test: false //   this.playerMoved = this.playerMoved.bind(this)\n\n    };\n  }\n\n  render() {\n    var PlayerChoice = this.state.PlayerChoice;\n    var computerChoice = this.state.computerChoice;\n    let choices = [\"rock\", \"paper\", \"scissors\"];\n    console.log(\"this is a computer choice \".concat(computerChoice));\n    console.log(\"this is play choice \".concat(PlayerChoice.toString()));\n\n    if (this.state.tieGame) {\n      console.log(\"tie\");\n    }\n\n    if (this.state.test) {\n      console.log(\"test is working!\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      onClick: () => this.playerMoved(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \" Rock \"), React.createElement(Options, {\n      click: () => this.playerMoved(),\n      choice: \"paper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \" Rock \"), React.createElement(Options, {\n      click: () => this.playerMoved(),\n      choice: \"paper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \" Paper \"), React.createElement(Options, {\n      click: () => this.playerMoved(),\n      choice: \"paper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \" Options \"));\n  }\n\n}\n\nexport default New;","map":{"version":3,"sources":["/Users/daria/development/paper-rock-scissors/src/components/new.js"],"names":["React","Options","New","Component","constructor","playerMoved","setState","PlayerChoice","computerChoice","startGame","test","state","username","firstPlayerScore","computerScore","endGame","tieGame","render","choices","console","log","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACV;;AADU,SAgBdC,WAhBc,GAgBA,MAAM;AAChB,WAAKC,QAAL,CAAe;AACPC,QAAAA,YAAY,EAAE,MADP;AAEPC,QAAAA,cAAc,EAAC,MAFR;AAGPC,QAAAA,SAAS,EAAC,IAHH;AAIPC,QAAAA,IAAI,EAAC;AAJE,OAAf;AAMH,KAvBa;;AAEV,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,OADD;AAETL,MAAAA,YAAY,EAAC,MAFJ;AAGTC,MAAAA,cAAc,EAAC,OAHN;AAITK,MAAAA,gBAAgB,EAAE,CAJT;AAKTC,MAAAA,aAAa,EAAE,CALN;AAMTL,MAAAA,SAAS,EAAC,KAND;AAOTM,MAAAA,OAAO,EAAC,KAPC;AAQTC,MAAAA,OAAO,EAAC,KARC;AASTN,MAAAA,IAAI,EAAC,KATI,CAWb;;AAXa,KAAb;AAYH;;AAaDO,EAAAA,MAAM,GAAG;AACL,QAAIV,YAAY,GAAG,KAAKI,KAAL,CAAWJ,YAA9B;AACA,QAAIC,cAAc,GAAG,KAAKG,KAAL,CAAWH,cAAhC;AACA,QAAIU,OAAO,GAAG,CAAC,MAAD,EAAQ,OAAR,EAAgB,UAAhB,CAAd;AAIAC,IAAAA,OAAO,CAACC,GAAR,qCAAyCZ,cAAzC;AACAW,IAAAA,OAAO,CAACC,GAAR,+BAAmCb,YAAY,CAACc,QAAb,EAAnC;;AAEA,QAAG,KAAKV,KAAL,CAAWK,OAAd,EAAuB;AACnBG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH;;AACD,QAAG,KAAKT,KAAL,CAAWD,IAAd,EAAoB;AAChBS,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;;AAGD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,OAAO,EAAE,MAAM,KAAKf,WAAL,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,MAAI,KAAKA,WAAL,EAApB;AAAwC,MAAA,MAAM,EAAC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,MAAI,KAAKA,WAAL,EAApB;AAAwC,MAAA,MAAM,EAAC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAII,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,MAAI,KAAKA,WAAL,EAApB;AAAwC,MAAA,MAAM,EAAC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,CADJ;AAQH;;AAtD6B;;AAyDlC,eAAeH,GAAf","sourcesContent":["import React from 'react'; \nimport Options from './Options/Options'\n\nclass New extends React.Component {\n    constructor() {\n        super() \n        this.state = {\n            username: 'Daria',\n            PlayerChoice:\"smth\",\n            computerChoice:\"other\",\n            firstPlayerScore: 0,\n            computerScore: 0,\n            startGame:false,\n            endGame:false,\n            tieGame:false,\n            test:false \n          }\n        //   this.playerMoved = this.playerMoved.bind(this)\n    }\n\n    playerMoved = () => {\n        this.setState( {\n                PlayerChoice: \"rock\",\n                computerChoice:\"rock\",\n                startGame:true,\n                test:true\n            })\n    }\n\n\n\n    render() {\n        var PlayerChoice = this.state.PlayerChoice; \n        var computerChoice = this.state.computerChoice; \n        let choices = [\"rock\",\"paper\",\"scissors\"]; \n\n  \n\n        console.log(`this is a computer choice ${computerChoice}`)\n        console.log(`this is play choice ${PlayerChoice.toString()}`)\n\n        if(this.state.tieGame) {\n            console.log(\"tie\")\n        }\n        if(this.state.test) {\n            console.log(\"test is working!\")\n        }\n\n        \n        return (\n            <div>\n                <p onClick={() => this.playerMoved()}> Rock </p>\n                <Options click={()=>this.playerMoved()} choice=\"paper\" > Rock </Options>\n                <Options click={()=>this.playerMoved()} choice=\"paper\" > Paper </Options>\n                <Options click={()=>this.playerMoved()} choice=\"paper\" > Options </Options>\n            </div>\n        )\n    }\n}\n\nexport default New; "]},"metadata":{},"sourceType":"module"}