{"ast":null,"code":"var _jsxFileName = \"/Users/daria/development/paper-rock-scissors/src/components/new.js\";\nimport React from 'react';\n\nclass New extends React.Component {\n  constructor() {\n    super();\n\n    this.playerMoved = () => {\n      this.setState({\n        PlayerChoice: \"rock\",\n        computerChoice: \"rock\",\n        startGame: true\n      });\n    };\n\n    this.state = {\n      username: 'Daria',\n      PlayerChoice: \"smth\",\n      computerChoice: \"other\",\n      firstPlayerScore: 0,\n      computerScore: 0,\n      startGame: false,\n      endGame: false,\n      tieGame: false,\n      test: false //   this.playerMoved = this.playerMoved.bind(this)\n\n    };\n  }\n\n  // endOfTheGame() {\n  //     this.setState = {\n  //         tieGame:true,\n  //         test:true\n  //     }\n  // }\n  render() {\n    var PlayerChoice = this.state.PlayerChoice;\n    var computerChoice = this.state.computerChoice;\n    let choices = [\"rock\", \"paper\", \"scissors\"];\n\n    if (this.state.startGame) {\n      // create random variable between 1 to 3 choosing between rock,paper, and sci) \n      let randNum = 0;\n      this.setState = {\n        computerChoice: choices[randNum],\n        endGame: true,\n        test: true\n      };\n    }\n\n    console.log(\"this is a computer choice \".concat(computerChoice));\n    console.log(\"this is play choice \".concat(PlayerChoice.toString()));\n\n    if (this.state.endGame) {\n      if (PlayerChoice === computerChoice) {\n        this.setState = {\n          tieGame: true,\n          test: true\n        };\n      }\n\n      console.log(\"this is end of game \".concat(PlayerChoice));\n    } // if(this.state.tieGame) {\n    //     console.log(\"tie\")\n    // }\n\n\n    if (this.state.test) {\n      console.log(\"test is working!\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      onClick: () => this.playerMoved(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \" Rock \"));\n  }\n\n}\n\nexport default New;","map":{"version":3,"sources":["/Users/daria/development/paper-rock-scissors/src/components/new.js"],"names":["React","New","Component","constructor","playerMoved","setState","PlayerChoice","computerChoice","startGame","state","username","firstPlayerScore","computerScore","endGame","tieGame","test","render","choices","randNum","console","log","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACV;;AADU,SAgBdC,WAhBc,GAgBA,MAAM;AAChB,WAAKC,QAAL,CAAe;AACPC,QAAAA,YAAY,EAAE,MADP;AAEPC,QAAAA,cAAc,EAAC,MAFR;AAGPC,QAAAA,SAAS,EAAC;AAHH,OAAf;AAKH,KAtBa;;AAEV,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,OADD;AAETJ,MAAAA,YAAY,EAAC,MAFJ;AAGTC,MAAAA,cAAc,EAAC,OAHN;AAITI,MAAAA,gBAAgB,EAAE,CAJT;AAKTC,MAAAA,aAAa,EAAE,CALN;AAMTJ,MAAAA,SAAS,EAAC,KAND;AAOTK,MAAAA,OAAO,EAAC,KAPC;AAQTC,MAAAA,OAAO,EAAC,KARC;AASTC,MAAAA,IAAI,EAAC,KATI,CAWb;;AAXa,KAAb;AAYH;;AAUD;AACA;AACA;AACA;AACA;AACA;AAGAC,EAAAA,MAAM,GAAG;AACL,QAAIV,YAAY,GAAG,KAAKG,KAAL,CAAWH,YAA9B;AACA,QAAIC,cAAc,GAAG,KAAKE,KAAL,CAAWF,cAAhC;AACA,QAAIU,OAAO,GAAG,CAAC,MAAD,EAAQ,OAAR,EAAgB,UAAhB,CAAd;;AAEA,QAAG,KAAKR,KAAL,CAAWD,SAAd,EAAyB;AACrB;AACA,UAAIU,OAAO,GAAG,CAAd;AACA,WAAKb,QAAL,GAAiB;AACbE,QAAAA,cAAc,EAAEU,OAAO,CAACC,OAAD,CADV;AAEbL,QAAAA,OAAO,EAAE,IAFI;AAGbE,QAAAA,IAAI,EAAC;AAHQ,OAAjB;AAKH;;AAGDI,IAAAA,OAAO,CAACC,GAAR,qCAAyCb,cAAzC;AACAY,IAAAA,OAAO,CAACC,GAAR,+BAAmCd,YAAY,CAACe,QAAb,EAAnC;;AAEA,QAAG,KAAKZ,KAAL,CAAWI,OAAd,EAAuB;AACnB,UAAGP,YAAY,KAAKC,cAApB,EAAoC;AAChC,aAAKF,QAAL,GAAiB;AACbS,UAAAA,OAAO,EAAC,IADK;AAEbC,UAAAA,IAAI,EAAC;AAFQ,SAAjB;AAIH;;AACDI,MAAAA,OAAO,CAACC,GAAR,+BAAmCd,YAAnC;AACH,KA3BI,CA4BL;AACA;AACA;;;AACA,QAAG,KAAKG,KAAL,CAAWM,IAAd,EAAoB;AAChBI,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;;AAGD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,OAAO,EAAE,MAAM,KAAKhB,WAAL,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ;AAKH;;AA1E6B;;AA6ElC,eAAeH,GAAf","sourcesContent":["import React from 'react'; \n\nclass New extends React.Component {\n    constructor() {\n        super() \n        this.state = {\n            username: 'Daria',\n            PlayerChoice:\"smth\",\n            computerChoice:\"other\",\n            firstPlayerScore: 0,\n            computerScore: 0,\n            startGame:false,\n            endGame:false,\n            tieGame:false,\n            test:false \n          }\n        //   this.playerMoved = this.playerMoved.bind(this)\n    }\n\n    playerMoved = () => {\n        this.setState( {\n                PlayerChoice: \"rock\",\n                computerChoice:\"rock\",\n                startGame:true\n            })\n    }\n\n    // endOfTheGame() {\n    //     this.setState = {\n    //         tieGame:true,\n    //         test:true\n    //     }\n    // }\n   \n\n    render() {\n        var PlayerChoice = this.state.PlayerChoice; \n        var computerChoice = this.state.computerChoice; \n        let choices = [\"rock\",\"paper\",\"scissors\"]; \n\n        if(this.state.startGame) {\n            // create random variable between 1 to 3 choosing between rock,paper, and sci) \n            let randNum = 0; \n            this.setState = ({\n                computerChoice: choices[randNum],\n                endGame: true,\n                test:true\n            })\n        }\n        \n\n        console.log(`this is a computer choice ${computerChoice}`)\n        console.log(`this is play choice ${PlayerChoice.toString()}`)\n\n        if(this.state.endGame) {\n            if(PlayerChoice === computerChoice) {\n                this.setState = ({\n                    tieGame:true,\n                    test:true\n                })\n            }\n            console.log(`this is end of game ${PlayerChoice}`)\n        }\n        // if(this.state.tieGame) {\n        //     console.log(\"tie\")\n        // }\n        if(this.state.test) {\n            console.log(\"test is working!\")\n        }\n\n        \n        return (\n            <div>\n                <p onClick={() => this.playerMoved()}> Rock </p>\n            </div>\n        )\n    }\n}\n\nexport default New; "]},"metadata":{},"sourceType":"module"}