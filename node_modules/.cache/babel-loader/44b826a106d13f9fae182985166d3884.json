{"ast":null,"code":"var _jsxFileName = \"/Users/daria/development/paper-rock-scissors/src/components/new.js\";\nimport React from 'react';\n\nclass New extends React.Component {\n  constructor() {\n    super();\n\n    this.playerMoved = () => {\n      this.setState({\n        PlayerChoice: \"rock\",\n        startGame: true,\n        endGame: true\n      });\n    };\n\n    this.state = {\n      username: 'Daria',\n      PlayerChoice: \"smth\",\n      computerChoice: \"rock\",\n      firstPlayerScore: 0,\n      computerScore: 0,\n      startGame: false,\n      endGame: false //   this.playerMoved = this.playerMoved.bind(this)\n\n    };\n  }\n\n  render() {\n    var PlayerChoice = this.state.PlayerChoice;\n    var computerChoice = this.state.computerChoice;\n    let choices = [\"rock\", \"paper\", \"scissors\"];\n\n    if (this.state.startGame) {\n      // create random variable between 1 to 3 choosing between rock,paper, and sci) \n      let randNum = 0;\n      this.setState = {\n        computerChoice: choices[randNum],\n        endGame: true\n      };\n    }\n\n    console.log(\"this is a computer choice \".concat(computerChoice));\n    console.log(\"this is play choice \".concat(PlayerChoice));\n\n    if (this.state.endGame) {\n      // if(this.state.PlayerChoice == )\n      console.log(\"this is end of game \".concat(PlayerChoice));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      onClick: this.playerMoved,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \" Rock \"));\n  }\n\n}\n\nexport default New;","map":{"version":3,"sources":["/Users/daria/development/paper-rock-scissors/src/components/new.js"],"names":["React","New","Component","constructor","playerMoved","setState","PlayerChoice","startGame","endGame","state","username","computerChoice","firstPlayerScore","computerScore","render","choices","randNum","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACV;;AADU,SAcdC,WAdc,GAcA,MAAM;AAChB,WAAKC,QAAL,CACI;AACIC,QAAAA,YAAY,EAAE,MADlB;AAEIC,QAAAA,SAAS,EAAC,IAFd;AAGIC,QAAAA,OAAO,EAAC;AAHZ,OADJ;AAOH,KAtBa;;AAEV,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,OADD;AAETJ,MAAAA,YAAY,EAAC,MAFJ;AAGTK,MAAAA,cAAc,EAAC,MAHN;AAITC,MAAAA,gBAAgB,EAAE,CAJT;AAKTC,MAAAA,aAAa,EAAE,CALN;AAMTN,MAAAA,SAAS,EAAC,KAND;AAOTC,MAAAA,OAAO,EAAC,KAPC,CASb;;AATa,KAAb;AAUH;;AAaDM,EAAAA,MAAM,GAAG;AACL,QAAIR,YAAY,GAAG,KAAKG,KAAL,CAAWH,YAA9B;AACA,QAAIK,cAAc,GAAG,KAAKF,KAAL,CAAWE,cAAhC;AACA,QAAII,OAAO,GAAG,CAAC,MAAD,EAAQ,OAAR,EAAgB,UAAhB,CAAd;;AAEA,QAAG,KAAKN,KAAL,CAAWF,SAAd,EAAyB;AACrB;AACA,UAAIS,OAAO,GAAG,CAAd;AACA,WAAKX,QAAL,GAAgB;AACZM,QAAAA,cAAc,EAAEI,OAAO,CAACC,OAAD,CADX;AAEZR,QAAAA,OAAO,EAAE;AAFG,OAAhB;AAIH;;AAGDS,IAAAA,OAAO,CAACC,GAAR,qCAAyCP,cAAzC;AACAM,IAAAA,OAAO,CAACC,GAAR,+BAAmCZ,YAAnC;;AAEA,QAAG,KAAKG,KAAL,CAAWD,OAAd,EAAuB;AACnB;AACAS,MAAAA,OAAO,CAACC,GAAR,+BAAmCZ,YAAnC;AACH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAG,MAAA,OAAO,EAAE,KAAKF,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ;AAYH;;AA7D6B;;AAgElC,eAAeH,GAAf","sourcesContent":["import React from 'react'; \n\nclass New extends React.Component {\n    constructor() {\n        super() \n        this.state = {\n            username: 'Daria',\n            PlayerChoice:\"smth\",\n            computerChoice:\"rock\",\n            firstPlayerScore: 0,\n            computerScore: 0,\n            startGame:false,\n            endGame:false\n          }\n        //   this.playerMoved = this.playerMoved.bind(this)\n    }\n\n    playerMoved = () => {\n        this.setState(\n            {\n                PlayerChoice: \"rock\",\n                startGame:true,\n                endGame:true\n            }\n        )\n    }\n   \n\n    render() {\n        var PlayerChoice = this.state.PlayerChoice; \n        var computerChoice = this.state.computerChoice; \n        let choices = [\"rock\",\"paper\",\"scissors\"]; \n\n        if(this.state.startGame) {\n            // create random variable between 1 to 3 choosing between rock,paper, and sci) \n            let randNum = 0; \n            this.setState = {\n                computerChoice: choices[randNum],\n                endGame: true\n            }\n        }\n        \n\n        console.log(`this is a computer choice ${computerChoice}`)\n        console.log(`this is play choice ${PlayerChoice}`)\n\n        if(this.state.endGame) {\n            // if(this.state.PlayerChoice == )\n            console.log(`this is end of game ${PlayerChoice}`)\n        }\n \n        return (\n            <div>\n\n                <p onClick={this.playerMoved}> Rock </p>\n                {/* <p onClick={this.playerMoved}> Paper </p>\n                <p onClick={this.playerMoved}> Scissors </p> */}\n                {/* <Rock onClick={this.playerMoved}  /> \n                <Paper> </Paper>\n                <Scissors> </Scissors>\n                {tieGame1} */}\n            </div>\n        )\n    }\n}\n\nexport default New; "]},"metadata":{},"sourceType":"module"}