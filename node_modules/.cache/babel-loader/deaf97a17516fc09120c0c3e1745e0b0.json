{"ast":null,"code":"var _jsxFileName = \"/Users/daria/development/paper-rock-scissors/src/components/new.js\";\nimport React from 'react';\n\nclass New extends React.Component {\n  constructor() {\n    super();\n\n    this.playerMoved = () => {\n      this.setState = {\n        PlayerChoice: \"rock\",\n        startGame: true\n      };\n    };\n\n    this.state = {\n      username: 'Daria',\n      PlayerChoice: \"smth\",\n      computerChoice: \"other\",\n      firstPlayerScore: 0,\n      computerScore: 0,\n      startGame: false,\n      endGame: false,\n      tieGame: false,\n      test: false //   this.playerMoved = this.playerMoved.bind(this)\n\n    };\n  }\n\n  // endOfTheGame() {\n  //     this.setState = {\n  //         tieGame:true,\n  //         test:true\n  //     }\n  // }\n  render() {\n    var PlayerChoice = this.state.PlayerChoice;\n    var computerChoice = this.state.computerChoice;\n    let choices = [\"rock\", \"paper\", \"scissors\"];\n\n    if (this.state.startGame) {\n      // create random variable between 1 to 3 choosing between rock,paper, and sci) \n      let randNum = 0;\n      this.setState = {\n        computerChoice: choices[randNum],\n        endGame: true\n      };\n    }\n\n    console.log(\"this is a computer choice \".concat(computerChoice));\n    console.log(\"this is play choice \".concat(PlayerChoice.toString())); // if(this.state.endGame) {\n    // //     this.endOfTheGame()\n    //     // if(PlayerChoice === computerChoice) {\n    //     //     this.setState = {\n    //     //         tieGame:true,\n    //     //         test:true\n    //     //     }\n    //     // }\n    //     console.log(`this is end of game ${PlayerChoice}`)\n    // }\n    // if(this.state.tieGame) {\n    //     console.log(\"tie\")\n    // }\n    // if(this.state.test) {\n    //     console.log(\"test is working!\")\n    // }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      onClick: () => this.playerMoved(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" Rock \"));\n  }\n\n}\n\nexport default New;","map":{"version":3,"sources":["/Users/daria/development/paper-rock-scissors/src/components/new.js"],"names":["React","New","Component","constructor","playerMoved","setState","PlayerChoice","startGame","state","username","computerChoice","firstPlayerScore","computerScore","endGame","tieGame","test","render","choices","randNum","console","log","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACV;;AADU,SAgBdC,WAhBc,GAgBA,MAAM;AAChB,WAAKC,QAAL,GAAgB;AACRC,QAAAA,YAAY,EAAE,MADN;AAERC,QAAAA,SAAS,EAAC;AAFF,OAAhB;AAIH,KArBa;;AAEV,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,OADD;AAETH,MAAAA,YAAY,EAAC,MAFJ;AAGTI,MAAAA,cAAc,EAAC,OAHN;AAITC,MAAAA,gBAAgB,EAAE,CAJT;AAKTC,MAAAA,aAAa,EAAE,CALN;AAMTL,MAAAA,SAAS,EAAC,KAND;AAOTM,MAAAA,OAAO,EAAC,KAPC;AAQTC,MAAAA,OAAO,EAAC,KARC;AASTC,MAAAA,IAAI,EAAC,KATI,CAWb;;AAXa,KAAb;AAYH;;AASD;AACA;AACA;AACA;AACA;AACA;AAGAC,EAAAA,MAAM,GAAG;AACL,QAAIV,YAAY,GAAG,KAAKE,KAAL,CAAWF,YAA9B;AACA,QAAII,cAAc,GAAG,KAAKF,KAAL,CAAWE,cAAhC;AACA,QAAIO,OAAO,GAAG,CAAC,MAAD,EAAQ,OAAR,EAAgB,UAAhB,CAAd;;AAEA,QAAG,KAAKT,KAAL,CAAWD,SAAd,EAAyB;AACrB;AACA,UAAIW,OAAO,GAAG,CAAd;AACA,WAAKb,QAAL,GAAgB;AACZK,QAAAA,cAAc,EAAEO,OAAO,CAACC,OAAD,CADX;AAEZL,QAAAA,OAAO,EAAE;AAFG,OAAhB;AAIH;;AAGDM,IAAAA,OAAO,CAACC,GAAR,qCAAyCV,cAAzC;AACAS,IAAAA,OAAO,CAACC,GAAR,+BAAmCd,YAAY,CAACe,QAAb,EAAnC,GAhBK,CAkBL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,OAAO,EAAE,MAAM,KAAKjB,WAAL,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ;AAKH;;AAzE6B;;AA4ElC,eAAeH,GAAf","sourcesContent":["import React from 'react'; \n\nclass New extends React.Component {\n    constructor() {\n        super() \n        this.state = {\n            username: 'Daria',\n            PlayerChoice:\"smth\",\n            computerChoice:\"other\",\n            firstPlayerScore: 0,\n            computerScore: 0,\n            startGame:false,\n            endGame:false,\n            tieGame:false,\n            test:false \n          }\n        //   this.playerMoved = this.playerMoved.bind(this)\n    }\n\n    playerMoved = () => {\n        this.setState = {\n                PlayerChoice: \"rock\",\n                startGame:true\n            }\n    }\n\n    // endOfTheGame() {\n    //     this.setState = {\n    //         tieGame:true,\n    //         test:true\n    //     }\n    // }\n   \n\n    render() {\n        var PlayerChoice = this.state.PlayerChoice; \n        var computerChoice = this.state.computerChoice; \n        let choices = [\"rock\",\"paper\",\"scissors\"]; \n\n        if(this.state.startGame) {\n            // create random variable between 1 to 3 choosing between rock,paper, and sci) \n            let randNum = 0; \n            this.setState = {\n                computerChoice: choices[randNum],\n                endGame: true\n            }\n        }\n        \n\n        console.log(`this is a computer choice ${computerChoice}`)\n        console.log(`this is play choice ${PlayerChoice.toString()}`)\n\n        // if(this.state.endGame) {\n        // //     this.endOfTheGame()\n        //     // if(PlayerChoice === computerChoice) {\n        //     //     this.setState = {\n        //     //         tieGame:true,\n        //     //         test:true\n        //     //     }\n        //     // }\n        //     console.log(`this is end of game ${PlayerChoice}`)\n        // }\n        // if(this.state.tieGame) {\n        //     console.log(\"tie\")\n        // }\n        // if(this.state.test) {\n        //     console.log(\"test is working!\")\n        // }\n\n        \n        return (\n            <div>\n                <p onClick={() => this.playerMoved()}> Rock </p>\n            </div>\n        )\n    }\n}\n\nexport default New; "]},"metadata":{},"sourceType":"module"}