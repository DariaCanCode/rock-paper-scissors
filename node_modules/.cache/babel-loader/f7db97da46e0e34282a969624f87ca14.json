{"ast":null,"code":"var _jsxFileName = \"/Users/daria/development/paper-rock-scissors/src/components/new.js\";\nimport React from 'react';\nimport Options from './Options/Options';\n\nclass New extends React.Component {\n  constructor() {\n    super();\n\n    this.playerMoved = choice => {\n      this.setState({\n        PlayerChoice: choice,\n        computerChoice: \"rock\",\n        startGame: true,\n        test: true\n      });\n      console.log(choice);\n    };\n\n    this.state = {\n      username: 'Daria',\n      PlayerChoice: \"smth\",\n      computerChoice: \"other\",\n      firstPlayerScore: 0,\n      computerScore: 0,\n      startGame: false,\n      endGame: false,\n      tieGame: false,\n      test: false //   this.playerMoved = this.playerMoved.bind(this)\n\n    };\n  }\n\n  computerChoice() {\n    var random = Math.floor(Math.random() * 4);\n    let choices = [\"rock\", \"paper\", \"scissors\"];\n    o;\n    console.log(random);\n  }\n\n  render() {\n    var PlayerChoice = this.state.PlayerChoice;\n    var computerChoice = this.state.computerChoice;\n    let choices = [\"rock\", \"paper\", \"scissors\"];\n\n    if (this.state.startGame) {\n      this.computerChoice();\n    }\n\n    console.log(\"this is a computer choice \".concat(computerChoice));\n    console.log(\"this is play choice \".concat(PlayerChoice.toString()));\n\n    if (this.state.tieGame) {\n      console.log(\"tie\");\n    }\n\n    if (this.state.test) {\n      console.log(\"test is working!\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Options, {\n      click: () => this.playerMoved(\"paper\"),\n      choice: \"Paper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Options, {\n      click: () => this.playerMoved(\"rock\"),\n      choice: \"Rock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Options, {\n      click: () => this.playerMoved(\"scissors\"),\n      choice: \"Scissors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default New;","map":{"version":3,"sources":["/Users/daria/development/paper-rock-scissors/src/components/new.js"],"names":["React","Options","New","Component","constructor","playerMoved","choice","setState","PlayerChoice","computerChoice","startGame","test","console","log","state","username","firstPlayerScore","computerScore","endGame","tieGame","random","Math","floor","choices","o","render","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACV;;AADU,SAgBdC,WAhBc,GAgBCC,MAAD,IAAY;AAEtB,WAAKC,QAAL,CAAe;AACPC,QAAAA,YAAY,EAAEF,MADP;AAEPG,QAAAA,cAAc,EAAC,MAFR;AAGPC,QAAAA,SAAS,EAAC,IAHH;AAIPC,QAAAA,IAAI,EAAC;AAJE,OAAf;AAMIC,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACP,KAzBa;;AAEV,SAAKQ,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,OADD;AAETP,MAAAA,YAAY,EAAC,MAFJ;AAGTC,MAAAA,cAAc,EAAC,OAHN;AAITO,MAAAA,gBAAgB,EAAE,CAJT;AAKTC,MAAAA,aAAa,EAAE,CALN;AAMTP,MAAAA,SAAS,EAAC,KAND;AAOTQ,MAAAA,OAAO,EAAC,KAPC;AAQTC,MAAAA,OAAO,EAAC,KARC;AASTR,MAAAA,IAAI,EAAC,KATI,CAWb;;AAXa,KAAb;AAYH;;AAaDF,EAAAA,cAAc,GAAG;AACb,QAAIW,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAc,CAAzB,CAAb;AACA,QAAIG,OAAO,GAAG,CAAC,MAAD,EAAQ,OAAR,EAAgB,UAAhB,CAAd;AACAC,IAAAA,CAAC;AACDZ,IAAAA,OAAO,CAACC,GAAR,CAAYO,MAAZ;AACH;;AAIDK,EAAAA,MAAM,GAAG;AACL,QAAIjB,YAAY,GAAG,KAAKM,KAAL,CAAWN,YAA9B;AACA,QAAIC,cAAc,GAAG,KAAKK,KAAL,CAAWL,cAAhC;AACA,QAAIc,OAAO,GAAG,CAAC,MAAD,EAAQ,OAAR,EAAgB,UAAhB,CAAd;;AAEA,QAAG,KAAKT,KAAL,CAAWJ,SAAd,EAAyB;AACrB,WAAKD,cAAL;AACH;;AAEDG,IAAAA,OAAO,CAACC,GAAR,qCAAyCJ,cAAzC;AACAG,IAAAA,OAAO,CAACC,GAAR,+BAAmCL,YAAY,CAACkB,QAAb,EAAnC;;AAEA,QAAG,KAAKZ,KAAL,CAAWK,OAAd,EAAuB;AACnBP,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH;;AACD,QAAG,KAAKC,KAAL,CAAWH,IAAd,EAAoB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;;AAGD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,MAAI,KAAKR,WAAL,CAAiB,OAAjB,CAApB;AAA+C,MAAA,MAAM,EAAC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,MAAI,KAAKA,WAAL,CAAiB,MAAjB,CAApB;AAA8C,MAAA,MAAM,EAAC,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,MAAI,KAAKA,WAAL,CAAiB,UAAjB,CAApB;AAAkD,MAAA,MAAM,EAAC,UAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AAhE6B;;AAmElC,eAAeH,GAAf","sourcesContent":["import React from 'react'; \nimport Options from './Options/Options'\n\nclass New extends React.Component {\n    constructor() {\n        super() \n        this.state = {\n            username: 'Daria',\n            PlayerChoice:\"smth\",\n            computerChoice:\"other\",\n            firstPlayerScore: 0,\n            computerScore: 0,\n            startGame:false,\n            endGame:false,\n            tieGame:false,\n            test:false \n          }\n        //   this.playerMoved = this.playerMoved.bind(this)\n    }\n\n    playerMoved = (choice) => {\n\n        this.setState( {\n                PlayerChoice: choice,\n                computerChoice:\"rock\",\n                startGame:true,\n                test:true\n            })\n            console.log(choice)\n    }\n\n    computerChoice() {\n        var random = Math.floor(Math.random()*4); \n        let choices = [\"rock\",\"paper\",\"scissors\"]; \n        o\n        console.log(random)\n    }\n\n\n\n    render() {\n        var PlayerChoice = this.state.PlayerChoice; \n        var computerChoice = this.state.computerChoice; \n        let choices = [\"rock\",\"paper\",\"scissors\"]; \n\n        if(this.state.startGame) {\n            this.computerChoice()\n        }\n\n        console.log(`this is a computer choice ${computerChoice}`)\n        console.log(`this is play choice ${PlayerChoice.toString()}`)\n\n        if(this.state.tieGame) {\n            console.log(\"tie\")\n        }\n        if(this.state.test) {\n            console.log(\"test is working!\")\n        }\n\n        \n        return (\n            <div>\n                <Options click={()=>this.playerMoved(\"paper\")} choice=\"Paper\" />\n                <Options click={()=>this.playerMoved(\"rock\")} choice=\"Rock\" />\n                <Options click={()=>this.playerMoved(\"scissors\")} choice=\"Scissors\" /> \n            </div>\n        )\n    }\n}\n\nexport default New; "]},"metadata":{},"sourceType":"module"}