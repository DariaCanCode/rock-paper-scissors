{"ast":null,"code":"var _jsxFileName = \"/Users/daria/development/paper-rock-scissors/src/components/new.js\";\nimport React from 'react';\n\nclass New extends React.Component {\n  constructor() {\n    super();\n\n    this.playerMoved = () => {\n      this.setState({\n        PlayerChoice: \"rock\",\n        startGame: true\n      });\n    };\n\n    this.state = {\n      username: 'Daria',\n      PlayerChoice: \"smth\",\n      computerChoice: \"rock\",\n      firstPlayerScore: 0,\n      computerScore: 0,\n      startGame: false,\n      endGame: false,\n      tieGame: false,\n      test: false //   this.playerMoved = this.playerMoved.bind(this)\n\n    };\n  }\n\n  endOfTheGame() {\n    this.setState = {\n      tieGame: true,\n      test: true\n    };\n  }\n\n  render() {\n    var PlayerChoice = this.state.PlayerChoice;\n    var computerChoice = this.state.computerChoice;\n    let choices = [\"rock\", \"paper\", \"scissors\"];\n\n    if (this.state.startGame) {\n      // create random variable between 1 to 3 choosing between rock,paper, and sci) \n      let randNum = 0;\n      this.setState = {\n        computerChoice: choices[randNum],\n        endGame: true\n      };\n    } // console.log(`this is a computer choice ${computerChoice}`)\n    // console.log(`this is play choice ${PlayerChoice}`)\n\n\n    if (this.state.endGame) {\n      this.endOfTheGame(); // if(PlayerChoice === computerChoice) {\n      //     this.setState = {\n      //         tieGame:true,\n      //         test:true\n      //     }\n      // }\n      // console.log(`this is end of game ${PlayerChoice}`)\n    }\n\n    if (this.state.tieGame) {\n      console.log(\"tie\");\n    }\n\n    if (this.state.test) {\n      console.log(\"test is working!\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      onClick: this.playerMoved,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \" Rock \"));\n  }\n\n}\n\nexport default New;","map":{"version":3,"sources":["/Users/daria/development/paper-rock-scissors/src/components/new.js"],"names":["React","New","Component","constructor","playerMoved","setState","PlayerChoice","startGame","state","username","computerChoice","firstPlayerScore","computerScore","endGame","tieGame","test","endOfTheGame","render","choices","randNum","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACV;;AADU,SAgBdC,WAhBc,GAgBA,MAAM;AAChB,WAAKC,QAAL,CACI;AACIC,QAAAA,YAAY,EAAE,MADlB;AAEIC,QAAAA,SAAS,EAAC;AAFd,OADJ;AAMH,KAvBa;;AAEV,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,OADD;AAETH,MAAAA,YAAY,EAAC,MAFJ;AAGTI,MAAAA,cAAc,EAAC,MAHN;AAITC,MAAAA,gBAAgB,EAAE,CAJT;AAKTC,MAAAA,aAAa,EAAE,CALN;AAMTL,MAAAA,SAAS,EAAC,KAND;AAOTM,MAAAA,OAAO,EAAC,KAPC;AAQTC,MAAAA,OAAO,EAAC,KARC;AASTC,MAAAA,IAAI,EAAC,KATI,CAWb;;AAXa,KAAb;AAYH;;AAUDC,EAAAA,YAAY,GAAG;AACX,SAAKX,QAAL,GAAgB;AACZS,MAAAA,OAAO,EAAC,IADI;AAEZC,MAAAA,IAAI,EAAC;AAFO,KAAhB;AAIH;;AAGDE,EAAAA,MAAM,GAAG;AACL,QAAIX,YAAY,GAAG,KAAKE,KAAL,CAAWF,YAA9B;AACA,QAAII,cAAc,GAAG,KAAKF,KAAL,CAAWE,cAAhC;AACA,QAAIQ,OAAO,GAAG,CAAC,MAAD,EAAQ,OAAR,EAAgB,UAAhB,CAAd;;AAEA,QAAG,KAAKV,KAAL,CAAWD,SAAd,EAAyB;AACrB;AACA,UAAIY,OAAO,GAAG,CAAd;AACA,WAAKd,QAAL,GAAgB;AACZK,QAAAA,cAAc,EAAEQ,OAAO,CAACC,OAAD,CADX;AAEZN,QAAAA,OAAO,EAAE;AAFG,OAAhB;AAIH,KAZI,CAeL;AACA;;;AAEA,QAAG,KAAKL,KAAL,CAAWK,OAAd,EAAuB;AACnB,WAAKG,YAAL,GADmB,CAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AACD,QAAG,KAAKR,KAAL,CAAWM,OAAd,EAAuB;AACnBM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH;;AACD,QAAG,KAAKb,KAAL,CAAWO,IAAd,EAAoB;AAChBK,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;;AAGD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,OAAO,EAAE,KAAKjB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ;AAKH;;AA1E6B;;AA6ElC,eAAeH,GAAf","sourcesContent":["import React from 'react'; \n\nclass New extends React.Component {\n    constructor() {\n        super() \n        this.state = {\n            username: 'Daria',\n            PlayerChoice:\"smth\",\n            computerChoice:\"rock\",\n            firstPlayerScore: 0,\n            computerScore: 0,\n            startGame:false,\n            endGame:false,\n            tieGame:false,\n            test:false \n          }\n        //   this.playerMoved = this.playerMoved.bind(this)\n    }\n\n    playerMoved = () => {\n        this.setState(\n            {\n                PlayerChoice: \"rock\",\n                startGame:true\n            }\n        )\n    }\n    endOfTheGame() {\n        this.setState = {\n            tieGame:true,\n            test:true\n        }\n    }\n   \n\n    render() {\n        var PlayerChoice = this.state.PlayerChoice; \n        var computerChoice = this.state.computerChoice; \n        let choices = [\"rock\",\"paper\",\"scissors\"]; \n\n        if(this.state.startGame) {\n            // create random variable between 1 to 3 choosing between rock,paper, and sci) \n            let randNum = 0; \n            this.setState = {\n                computerChoice: choices[randNum],\n                endGame: true\n            }\n        }\n        \n\n        // console.log(`this is a computer choice ${computerChoice}`)\n        // console.log(`this is play choice ${PlayerChoice}`)\n\n        if(this.state.endGame) {\n            this.endOfTheGame()\n            // if(PlayerChoice === computerChoice) {\n            //     this.setState = {\n            //         tieGame:true,\n            //         test:true\n            //     }\n            // }\n            // console.log(`this is end of game ${PlayerChoice}`)\n        }\n        if(this.state.tieGame) {\n            console.log(\"tie\")\n        }\n        if(this.state.test) {\n            console.log(\"test is working!\")\n        }\n\n        \n        return (\n            <div>\n                <p onClick={this.playerMoved}> Rock </p>\n            </div>\n        )\n    }\n}\n\nexport default New; "]},"metadata":{},"sourceType":"module"}