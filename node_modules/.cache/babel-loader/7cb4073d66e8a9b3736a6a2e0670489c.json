{"ast":null,"code":"var _jsxFileName = \"/Users/daria/development/paper-rock-scissors/src/components/new.js\";\nimport React from 'react';\nimport Options from './Options/Options';\n\nclass New extends React.Component {\n  constructor() {\n    super();\n\n    this.playerMoved = choice => {\n      this.setState({\n        PlayerChoice: choice,\n        startGame: true,\n        test: true\n      });\n    };\n\n    this.state = {\n      username: 'Daria',\n      PlayerChoice: \"smth\",\n      computerChoice: \"other\",\n      firstPlayerScore: 0,\n      computerScore: 0,\n      startGame: false,\n      endGame: false,\n      tieGame: false,\n      test: false //   this.playerMoved = this.playerMoved.bind(this)\n\n    };\n  }\n\n  computerChoice() {\n    var random = Math.floor(Math.random() * 4);\n    let choices = [\"rock\", \"paper\", \"scissors\"];\n    var computerChoice = choices[random];\n    console.log(\"computer choice is \".concat(computerChoice));\n  }\n\n  findWinner() {\n    if (this.state.computerChoice === this.state.PlayerChoice) {\n      console.log(\"tie \");\n    }\n\n    console.log(\"winner \");\n  }\n\n  render() {\n    var PlayerChoice = this.state.PlayerChoice;\n    var computerChoice = this.state.computerChoice;\n\n    if (true) {\n      this.computerChoice();\n    }\n\n    console.log(\"this is a computer choice \".concat(computerChoice.toString()));\n    console.log(\"this is playchoice \".concat(PlayerChoice.toString()));\n\n    if (this.state.tieGame) {\n      console.log(\"tie\");\n    }\n\n    if (this.state.test) {\n      console.log(\"test is working!\");\n    }\n\n    if (this.state.startGame) {\n      this.findWinner();\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Options, {\n      click: () => this.playerMoved(\"paper\"),\n      choice: \"Paper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Options, {\n      click: () => this.playerMoved(\"rock\"),\n      choice: \"Rock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Options, {\n      click: () => this.playerMoved(\"scissors\"),\n      choice: \"Scissors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default New;","map":{"version":3,"sources":["/Users/daria/development/paper-rock-scissors/src/components/new.js"],"names":["React","Options","New","Component","constructor","playerMoved","choice","setState","PlayerChoice","startGame","test","state","username","computerChoice","firstPlayerScore","computerScore","endGame","tieGame","random","Math","floor","choices","console","log","findWinner","render","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACV;;AADU,SAgBdC,WAhBc,GAgBCC,MAAD,IAAY;AACtB,WAAKC,QAAL,CAAe;AACPC,QAAAA,YAAY,EAAEF,MADP;AAEPG,QAAAA,SAAS,EAAC,IAFH;AAGPC,QAAAA,IAAI,EAAC;AAHE,OAAf;AAKH,KAtBa;;AAEV,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,OADD;AAETJ,MAAAA,YAAY,EAAC,MAFJ;AAGTK,MAAAA,cAAc,EAAC,OAHN;AAITC,MAAAA,gBAAgB,EAAE,CAJT;AAKTC,MAAAA,aAAa,EAAE,CALN;AAMTN,MAAAA,SAAS,EAAC,KAND;AAOTO,MAAAA,OAAO,EAAC,KAPC;AAQTC,MAAAA,OAAO,EAAC,KARC;AASTP,MAAAA,IAAI,EAAC,KATI,CAWb;;AAXa,KAAb;AAYH;;AAUDG,EAAAA,cAAc,GAAG;AACb,QAAIK,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAc,CAAzB,CAAb;AACA,QAAIG,OAAO,GAAG,CAAC,MAAD,EAAQ,OAAR,EAAgB,UAAhB,CAAd;AACA,QAAIR,cAAc,GAAGQ,OAAO,CAACH,MAAD,CAA5B;AACAI,IAAAA,OAAO,CAACC,GAAR,8BAAkCV,cAAlC;AACH;;AAEDW,EAAAA,UAAU,GAAG;AACT,QAAG,KAAKb,KAAL,CAAWE,cAAX,KAA8B,KAAKF,KAAL,CAAWH,YAA5C,EAA0D;AACtDc,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;;AAGDE,EAAAA,MAAM,GAAG;AACL,QAAIjB,YAAY,GAAG,KAAKG,KAAL,CAAWH,YAA9B;AACA,QAAIK,cAAc,GAAG,KAAKF,KAAL,CAAWE,cAAhC;;AAEA,QAAG,IAAH,EAAS;AACL,WAAKA,cAAL;AACH;;AAEDS,IAAAA,OAAO,CAACC,GAAR,qCAAyCV,cAAc,CAACa,QAAf,EAAzC;AACAJ,IAAAA,OAAO,CAACC,GAAR,8BAAkCf,YAAY,CAACkB,QAAb,EAAlC;;AAEA,QAAG,KAAKf,KAAL,CAAWM,OAAd,EAAuB;AACnBK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH;;AACD,QAAG,KAAKZ,KAAL,CAAWD,IAAd,EAAoB;AAChBY,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;;AAED,QAAG,KAAKZ,KAAL,CAAWF,SAAd,EAAyB;AACrB,WAAKe,UAAL;AACH;;AAGD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,MAAI,KAAKnB,WAAL,CAAiB,OAAjB,CAApB;AAA+C,MAAA,MAAM,EAAC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,MAAI,KAAKA,WAAL,CAAiB,MAAjB,CAApB;AAA8C,MAAA,MAAM,EAAC,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,MAAI,KAAKA,WAAL,CAAiB,UAAjB,CAApB;AAAkD,MAAA,MAAM,EAAC,UAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AAtE6B;;AAyElC,eAAeH,GAAf","sourcesContent":["import React from 'react'; \nimport Options from './Options/Options'\n\nclass New extends React.Component {\n    constructor() {\n        super() \n        this.state = {\n            username: 'Daria',\n            PlayerChoice:\"smth\",\n            computerChoice:\"other\",\n            firstPlayerScore: 0,\n            computerScore: 0,\n            startGame:false,\n            endGame:false,\n            tieGame:false,\n            test:false \n          }\n        //   this.playerMoved = this.playerMoved.bind(this)\n    }\n\n    playerMoved = (choice) => {\n        this.setState( {\n                PlayerChoice: choice,\n                startGame:true,\n                test:true\n            })\n    }\n\n    computerChoice() {\n        var random = Math.floor(Math.random()*4); \n        let choices = [\"rock\",\"paper\",\"scissors\"]; \n        var computerChoice = choices[random]; \n        console.log(`computer choice is ${computerChoice}`)\n    }\n\n    findWinner() {\n        if(this.state.computerChoice === this.state.PlayerChoice) {\n            console.log(\"tie \")\n        }\n        console.log(\"winner \")\n    }\n\n\n    render() {\n        var PlayerChoice = this.state.PlayerChoice; \n        var computerChoice = this.state.computerChoice; \n\n        if(true) {\n            this.computerChoice()\n        }\n\n        console.log(`this is a computer choice ${computerChoice.toString()}`)\n        console.log(`this is playchoice ${PlayerChoice.toString()}`)\n\n        if(this.state.tieGame) {\n            console.log(\"tie\")\n        }\n        if(this.state.test) {\n            console.log(\"test is working!\")\n        }\n\n        if(this.state.startGame) {\n            this.findWinner()\n        }\n \n\n        return (\n            <div>\n                <Options click={()=>this.playerMoved(\"paper\")} choice=\"Paper\" />\n                <Options click={()=>this.playerMoved(\"rock\")} choice=\"Rock\" />\n                <Options click={()=>this.playerMoved(\"scissors\")} choice=\"Scissors\" /> \n            </div>\n        )\n    }\n}\n\nexport default New; "]},"metadata":{},"sourceType":"module"}